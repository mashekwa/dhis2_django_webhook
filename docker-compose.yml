services:
    django:
        build: .
        env_file: 
            - .env
        container_name: django
        command: >
                bash -c "python manage.py makemigrations &&
                            python manage.py migrate &&
                            python manage.py runserver 0.0.0.0:8000"
        volumes:
            - .:/usr/src/app/
        ports:
            - "8000:8000"
        environment:
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        depends_on:
            - pgdb
            - redis
    celery:
        build: .
        command: celery -A core worker -l INFO
        volumes:
            - .:/usr/src/app
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        depends_on:
            - django
            - redis
    pgdb:
        image: postgres
        container_name: pgdb
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        volumes:
            - pgdata:/var/lib/postgresql/data/

    redis:
        image: "redis:alpine"

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4
        restart: always
        ports:
          - "8888:80"
        environment:
          PGADMIN_DEFAULT_EMAIL: admin@mail.com
          PGADMIN_DEFAULT_PASSWORD: admin
        volumes:
          - pgadmin-data:/var/lib/pgadmin    

    flower:
        image: mher/flower:0.9.7
        command: ['flower', '--broker=redis://redis:6379', '--port=5555']
        ports:
            - "5555:5555"
        depends_on:
            - redis

    
    kafka_consumer:
        build:
            context: ./kafka-listener  # Build Kafka consumer from the `app` folder
        container_name: kafka_consumer
        command: python kafka_listener.py
        depends_on:
            - celery
        
volumes:
    pgdata:
    pgadmin-data:
    flower:
